package Services;

import java.util.List;
import java.util.Scanner;

import Model.Admin;
import Model.Bike;
import Model.Bus;
import Model.Car;
import Model.Customer;
import Model.Vehicle;

public class MainServices {
	private static Scanner sc = new Scanner(System.in);
	private static VehicleInventory inventory = new VehicleInventory();
	private static Customer customer;

	public static void main(String[] args) {
		initializeVehicles();

		boolean flag = true;
		System.out.println("---------------------------VEHICLE RENTAL SYSTEM--------------------------");
		while (flag) {
			showMenu();
			int ch = sc.nextInt();
			switch (ch) {
			case 1 -> handleAdminLogin();
			case 2 -> handleCustomerLogin();
			case 3 -> flag = false;
			default -> System.out.println("Invalid Choice.............");
			}
		}

		System.out.println("Thank you for visiting.....");

	}

	public static void showMenu() {
		System.out.println("\n1. Admin \n2. Customer");
		System.out.println("Enter your choice: ");
	}

	public static void handleAdminLogin() {
		System.out.println("Enter Username: ");
		String user = sc.next();
		System.out.println("Enter Password: ");
		String pass = sc.next();

		if (Admin.authenticate(user, pass)) {
			AdminMenu();
		} else {
			System.out.println("Incorrect username or password.....,Please try again");
		}

	}

	public static void AdminMenu() {
		System.out.println("-------------Option-----------");
		System.out.println("1. Add Vehicle");
		System.out.println("2. Remove Vehicle");
		System.out.println("3. Show All vehicle info");
		System.out.println("4. Send Vehicle for maintenance");
		System.out.println("5. Complete vehicle maintenance");
		System.out.println("6. View All Customer Details with Rented vehicle Details");

	}

	public static void initializeVehicles() {
		inventory.addVehicle(new Car("C001", 1200, 6));
		inventory.addVehicle(new Car("C002", 1000, 8));
		inventory.addVehicle(new Bus("BS001", 5000, 16));
		inventory.addVehicle(new Bus("BS002", 10000, 30));
		inventory.addVehicle(new Bike("Bk001", 200, true));
		inventory.addVehicle(new Bike("Bk002", 100, false));
	}

	public static void handleCustomerLogin() {
		System.out.println("-------------Registration Form-----------");
		System.out.println("Enter your Name: ");
		String name = sc.next();
		System.out.println("Enter your Mobile No: ");
		long mobile = sc.nextLong();
		System.out.println("Licence Available ?(yes/no)");
		String available = sc.next();
		boolean isl = available.equalsIgnoreCase("yes");
		customer = new Customer(name, mobile, isl);

		if (customer != null) {
			System.out.println("Registration Successfull.........");
			customerMenu();
		} else {
			System.out.println("Registration Failed........,Please try again");
		}

	}

	public static void customerMenu() {
		boolean flag = true;
		while (flag) {
			System.out.println("-----------Menu----------");
			System.out.println("1. Show Available Bikes");
			System.out.println("2. Show Availble Cars");
			System.out.println("3. Show Available Buses");
			System.out.println("4. Rent vehicle");
			System.out.println("5. Return all Rented Vehicle");
			System.out.println("6. view Rented vehicles");
			System.out.println("7. Exit");
			System.out.println("--------------------");

			int choice = sc.nextInt();

			switch (choice) {
			case 1 -> inventory.showAvailableVehicle(Bike.class);
			case 2 -> inventory.showAvailableVehicle(Car.class);
			case 3 -> inventory.showAvailableVehicle(Bus.class);
			case 4 -> {
				System.out.println("Enter Vehicle Id: ");
				String id = sc.next();
				Vehicle vehicle = getVehicleByID(id);

				System.out.println("Enter no of Days: ");
				int days = sc.nextInt();
				if (vehicle != null) {

					customer.rentvehicle(vehicle, days);
				} else {
					System.out.println("Vehicle not found.....");
				}
			}

//		case 5->
//		case 6->
			case 7 -> flag = false;
			default -> System.out.println("Invalid Choice........");
			}
		}

	}

	private static Vehicle getVehicleByID(String id) {
		List<Vehicle> vehicles = inventory.getallVehicle();
		for (Vehicle vehicle : vehicles) {
			if (vehicle.getVehicleId().equalsIgnoreCase(id)) {
				return vehicle;
			}
		}
		return null;
	}

}
